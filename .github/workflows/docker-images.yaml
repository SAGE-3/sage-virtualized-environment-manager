name: Docker Images

on:
  push:
    branches: ["main"]

env:
  REGISTRY: ghcr.io

jobs:
  build-and-push-amd64:
    runs-on: ubuntu-latest
    services:
          registry:
            image: registry:2
            ports:
              - 5000:5000

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Login To GitHub Container Registry
      - name: Log in to the Container GHCR registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: network=host

      # https://github.com/docker/build-push-action
      - name: Build and push Container Manager Docker image
        uses: docker/build-push-action@v5
        with:
          file: management-system/Dockerfile
          # context: "{{defaultContext}}:."
          context: "${{ github.workspace }}/management-system"
          platforms: linux/amd64
          push: true
          tags: ${{ env.REGISTRY }}/sage-3/cosage-containermanager:amd64
          labels: ${{ steps.meta.outputs.labels }}


      # Base Images
      - name: "[INTERNAL_DOCKER]: VNC-X11"
        uses: docker/build-push-action@v5
        with:
          file: containers/baseimage-websockify/Dockerfile
          context: "${{ github.workspace }}/containers/baseimage-websockify"
          platforms: linux/amd64
          push: true
          tags: localhost:5000/websockify-baseimage:latest

      # - name: Build and push Base WebSockify Audio Docker image internally
      #   uses: docker/build-push-action@v5
      #   with:
      #     file: containers/baseimage-websockify-audio/Dockerfile
      #     context: "${{ github.workspace }}/containers/baseimage-websockify-audio"
      #     platforms: linux/amd64
      #     load: true
      #     tags: localhost:5000/websockify-baseimage-audio:latest


      # Elevation 1 (Intermediary)
      - name: "[INTERNAL_DOCKER]: WebSockify + VNC-X11"
        uses: docker/build-push-action@v5
        with:
          build-contexts: |
            websockify-baseimage=docker-image://localhost:5000/websockify-baseimage:latest
          file: containers/baseimage-websockify-vnc-x11/Dockerfile
          context: "${{ github.workspace }}/containers/baseimage-websockify-vnc-x11"
          platforms: linux/amd64
          push: true
          tags: localhost:5000/vnc-x11-baseimage:latest

      # - name: Build and push Base WebSockify VNC with X11 and Audio image internally
      #   uses: docker/build-push-action@v5
      #   with:
      #     build-contexts: |
      #       websockify-baseimage-audio=docker-image://localhost:5000/websockify-baseimage-audio:latest
      #     file: containers/baseimage-websockify-vnc-x11-audio/Dockerfile
      #     context: "${{ github.workspace }}/containers/baseimage-websockify-vnc-x11-audio"
      #     platforms: linux/amd64
      #     load: true
      #     tags: localhost:5000/vnc-x11-audio-baseimage:latest


      # Elevation 2 (Final Containers/ Apps)
      - name: "[DOCKER]: VNC"
        uses: docker/build-push-action@v5
        with:
          build-contexts: |
            websockify-baseimage=docker-image://localhost:5000/websockify-baseimage:latest
          file: containers/websockify-vnc-connect/Dockerfile
          context: "${{ github.workspace }}/containers/websockify-vnc-connect"
          platforms: linux/amd64
          push: true
          tags: ${{ env.REGISTRY }}/sage-3/cosage-vnc:amd64
          labels: ${{ steps.meta.outputs.labels }}

      - name: "[DOCKER]: Blender"
        uses: docker/build-push-action@v5
        with:
          build-contexts: |
            vnc-x11-baseimage=docker-image://localhost:5000/vnc-x11-baseimage:latest
          file: containers/websockify-vnc-x11-blender/Dockerfile
          context: "${{ github.workspace }}/containers/websockify-vnc-x11-blender"
          platforms: linux/amd64
          push: true
          tags: ${{ env.REGISTRY }}/sage-3/cosage-blender:amd64
          labels: ${{ steps.meta.outputs.labels }}

      - name: "[DOCKER]: Firefox"
        uses: docker/build-push-action@v5
        with:
          build-contexts: |
            vnc-x11-baseimage=docker-image://localhost:5000/vnc-x11-baseimage:latest
          file: containers/websockify-vnc-x11-firefox/Dockerfile
          context: "${{ github.workspace }}/containers/websockify-vnc-x11-firefox"
          platforms: linux/amd64
          push: true
          tags: ${{ env.REGISTRY }}/sage-3/cosage-firefox:amd64
          labels: ${{ steps.meta.outputs.labels }}

      # - name: Build and push Firefox-Audio Docker image
      #   uses: docker/build-push-action@v5
      #   with:
      #     build-contexts: |
      #       vnc-x11-audio-baseimage=docker-image://localhost:5000/vnc-x11-audio-baseimage:latest
      #     file: containers/websockify-vnc-x11-firefox-audio/Dockerfile
      #     context: "${{ github.workspace }}/containers/websockify-vnc-x11-firefox-audio"
      #     platforms: linux/amd64
      #     push: true
      #     tags: ${{ env.REGISTRY }}/sage-3/cosage-firefox-audio:amd64
      #     labels: ${{ steps.meta.outputs.labels }}



  # No Arm support for now (not tested)
  # build-and-push-arm64:
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4
  #       with:
  #         fetch-depth: 0

  #     # Login To GitHub Container Registry
  #     - name: Log in to the Container GHCR registry
  #       uses: docker/login-action@v3
  #       with:
  #         registry: ${{ env.REGISTRY }}
  #         username: ${{ github.actor }}
  #         password: ${{ secrets.GITHUB_TOKEN }}

  #     - name: Set up Docker Buildx
  #       id: buildx
  #       uses: docker/setup-buildx-action@v3

  #     # https://github.com/docker/build-push-action
  #     - name: Build and push Docker image
  #       uses: docker/build-push-action@v5
  #       with:
  #         file: fastapi/Dockerfile
  #         context: "{{defaultContext}}:."
  #         platforms: linux/arm64
  #         push: true
  #         tags: ${{ env.REGISTRY }}/sage-3/cosagecontainermanager:arm64
  #         labels: ${{ steps.meta.outputs.labels }}